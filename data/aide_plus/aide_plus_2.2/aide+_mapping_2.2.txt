Lcom/aide/ui/services/ProjectService; -> Lcom/aide/ui/services/ProjectService;
	CU() -> reloadingProject
Lcom/aide/ui/project/AndroidProjectSupport; -> Lcom/aide/ui/project/AndroidProjectSupport;
	kQ(Ljava/lang/String;Ljava/lang/String;) -> getProjectPackageName
Lcom/aide/ui/App; -> Lcom/aide/ui/App;
	we() -> getEngineService
	a8() -> getLicenseService
	aM() -> getNavigateService
	BT() -> getTemplateService
	cn() -> getUpdateNotifyService
	getNativeCodeSupportService() -> getDownloadService

Lcom/aide/ui/services/NativeCodeSupportService$s; -> Lcom/aide/ui/services/DownloadService$Task;
Lcom/aide/ui/services/NativeCodeSupportService$g; -> Lcom/aide/ui/services/DownloadService$DocsRunnable;
Lcom/aide/ui/services/NativeCodeSupportService$q$a; -> Lcom/aide/ui/services/DownloadService$MavenLibrariesCallable$Callback;
Lcom/aide/ui/services/NativeCodeSupportService$q; -> Lcom/aide/ui/services/DownloadService$MavenLibrariesCallable;
	v5 -> downloadService
	j6 -> activity
	DW -> callbackRunnable
	FH -> mavenDependencyList
	Hw -> remoteRepositoryList

Lcom/aide/ui/services/NativeCodeSupportService$k; -> Lcom/aide/ui/services/DownloadService$MavenLibrariesRunnable;
	qp -> downloadService
	WB -> activity
	mb -> mavenDependencyList
	jw -> remoteRepositoryList
	fY -> callbackRunnable
	
Lcom/aide/ui/services/NativeCodeSupportService; -> Lcom/aide/ui/services/DownloadService;
	DW -> executorService
	FH -> task
	Zo -> taskTitle
	J8(Lcom/aide/ui/services/NativeCodeSupportService;) -> getExecutorService
	tp(Lcom/aide/ui/services/NativeCodeSupportService;) -> getTask
	we(Lcom/aide/ui/services/NativeCodeSupportService;Lcom/aide/ui/services/NativeCodeSupportService$s;) -> setTask
	J0(Lcom/aide/ui/services/NativeCodeSupportService;Ljava/lang/String;) -> setTaskTitle
	gW() -> getTaskTitle
	vJ(Landroid/app/Activity;) -> downloadDocs
	KD(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/Runnable;) -> runTask
	gn(Lcom/aide/ui/services/DownloadService;Ljava/lang/String;Ljava/lang/String;Z) -> downloadFile
	
Lcom/aide/ui/services/MavenService; -> Lcom/aide/ui/services/MavenService;
	nw() -> refresh
	FH() -> resetDepPathMap
	ei() -> resetDepMap
	rN(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> getMetadataUrl
	lg(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> getMetadataPath
	aM(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;Ljava/lang/String;Ljava/lang/String;) -> getArtifactUrl
	XL(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;Ljava/lang/String;Ljava/lang/String;) -> getArtifactPath
	rN(Ljava/lang/String;Ljava/lang/String;Z) -> downloadFile
	v5(Lcom/aide/ui/util/BuildGradle$MavenDependency;)V -> resolvingMavenDependency
	
Labcd/af; -> Lcom/aide/ui/services/LicenseService;
Lcom/aide/codemodel/api/Type; -> Lcom/aide/codemodel/api/Type;
	sy() -> getSemantic
Lcom/aide/ui/project/AndroidProjectSupport; -> Lcom/aide/ui/project/AndroidProjectSupport;
	k2(Ljava/lang/String;) -> getProjectMavenDependencyList

Lcom/aide/codemodel/api/callback/HighlighterCallback; -> Lcom/aide/codemodel/api/callback/HighlighterCallback;
	u7(Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/SyntaxTreeSytles;) -> addSyntaxTreeSytles

Labcd/u1; -> Lcom/aide/codemodel/api/Member;
	Q6() -> isAbstract
	BR() -> loadSyntax
	sG() -> data
Labcd/u1$b; -> Lcom/aide/codemodel/api/Member$Data;
	DW -> syntaxLoaded
	
	

Labcd/k1; -> Lcom/aide/codemodel/api/ClassType;
	J8 -> file
	VH() -> getFile
Labcd/j1; -> Lcom/aide/codemodel/api/ArrayType;
Labcd/z1; -> Lcom/aide/codemodel/api/Namespace;
Labcd/v1; -> Lcom/aide/codemodel/api/MethodParameterType;
Labcd/b2; -> Lcom/aide/codemodel/api/ParameterType;
Labcd/a2; -> Lcom/aide/codemodel/api/ParameterizedType;
Labcd/w1; -> Lcom/aide/codemodel/api/MethodParameterTypeVariable;
Labcd/c2; -> Lcom/aide/codemodel/api/PointerType;
Labcd/d2; -> Lcom/aide/codemodel/api/PrimitiveType;

Labcd/n1; -> Lcom/aide/codemodel/api/Entity;
	cn() -> isType
	gW() -> isMember
	er() -> isClassType
	rN() -> isArrayType
	P8() -> isNamespace
	BT() -> isMethodParameterType
	nw() -> isParameterType
	ei() -> isParameterizedType
	vy() -> isMethodParameterTypeVariable
	SI() -> isPointerType
	KD() -> isPrimitiveType
	Hw() -> getEnclosingClassType
	XL() -> getLanguage
	gn() -> getFullyQualifiedNameString
	lg() -> getNameString
	tp() -> getHTMLString
	aM() -> getModifiers
	
	
	
Lcom/aide/codemodel/api/abstraction/CodeRenderer; -> Lcom/aide/codemodel/api/abstraction/CodeRenderer;
	Hw(Labcd/n1;) -> getFullyQualifiedNameString
	j6(Labcd/n1;) -> getNameString
	DW(Labcd/n1;) -> getHTMLString
	
Lcom/aide/codemodel/api/abstraction/Syntax; -> Lcom/aide/codemodel/api/abstraction/Syntax;
	BT(I) -> isBlock
	yO(I) -> isMemberDeclaration
	rN(I) -> isFieldDeclaration
	J0(I) -> isMethodDeclaration
	J8(I) -> isClassDeclaration
	isClassDeclaration(I) ->  isTypeIdentifier
	gW(I) -> isExpression
	DW(I) -> getTokenLength
	aj(I) -> isBooleanLiteral
	nw(I) -> isOperator 
	sG(I) -> isSeparator
	SI(I) -> isClassBody
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	lp(I) -> isDocComment
	j6(I) -> isComment
	
	
Lcom/aide/codemodel/api/Model; -> Lcom/aide/codemodel/api/Model;
	Mr -> errorTable
	XL -> syntaxTreeSpace
Lcom/aide/codemodel/api/SyntaxTree; -> Lcom/aide/codemodel/api/SyntaxTree;
	hp(I) -> isClassDeclarationNode
	cc(I) -> isMethodDeclarationNode
	Hl(I) -> isFieldDeclarationNode
	isFieldDeclarationNode(I) -> isMethodOrClassOrFieldDeclarationNode
	
	xg(I) -> isChangedExpressionNode
	br(I) -> getClassDeclarationNode
	XX(II) -> getClassDeclarationNode
	q7(I) -> getMemberDeclarationNode
	Z1(II) -> getMemberDeclarationNode
	e3() -> getNamespaceNodePairs
	sM(IIIII) -> getReadExpressionNodeAt
	containsPositionExt(III) -> containsPosition
	gn(III) -> containsPositionExt
	eU() -> getModel
	jw()  -> getImportNodePairs
	om(I) -> isParameters
	hz() -> getFile
	sG(I) -> getAttrType
	PT(I) -> hasAttrType
	ro(I) -> getAttrInvocationType
	MP(I) -> hasAttrInvocationType
	QO(IIII) -> getReadExpressionNodeAt
	QX(IILcom/aide/codemodel/api/Entity;) -> declareAttrReferenceKind
	dx(I) -> getAttrTarget
	zh(I) -> getLeftSisterNode
	vy(IZ[IIIIII) -> declareNode
	BT(IZ[IIIII) -> declareNode
	Bx(III) -> getTokenNodeAt
	fN(IIIII) -> getSyntaxTagNodeAt
	Gj(IIIIII) -> getSyntaxTagNodeAt
	mb() -> getImportEndLine
	kf(IIIII) -> getMethodNodeAt

Lcom/aide/codemodel/api/o1$a; -> Lcom/aide/codemodel/api/EntitySpace$FileInfo;

Lcom/aide/codemodel/api/EntitySpace; -> Lcom/aide/codemodel/api/EntitySpace;
	aq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;I) -> getClasstype
	Z1(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> getFileInfo
	j6 -> fileSpace
	ye(Lcom/aide/codemodel/api/Entity;) -> getID
	
Lcom/aide/codemodel/api/FileSpace; -> Lcom/aide/codemodel/api/FileSpace;
	P8(Lcom/aide/codemodel/api/FileEntry;) -> getID
	Ws(Lcom/aide/codemodel/api/FileEntry;) -> getAssembly
	Mr(Lcom/aide/codemodel/api/FileEntry;) -> getDebugOutputPath
	U2(Lcom/aide/codemodel/api/FileEntry;) -> getReleaseOutputPath
	ef(Lcom/aide/codemodel/api/FileEntry;) -> getTargetVersion
	nw(Lcom/aide/codemodel/api/abstraction/Language;) -> getLanguageID
	er(I) -> getCodeModel
	ro(Lcom/aide/codemodel/api/FileEntry;) -> getCodeModelWrapper
	
	
	
Lcom/aide/codemodel/api/FileSpace$a; -> Lcom/aide/codemodel/api/FileSpace$Assembly;
	Zo -> targetVersion
	gn(Lcom/aide/codemodel/api/FileSpace$a;) -> getTargetVersion
	Hw -> debugOutputPath
	Hw(Lcom/aide/codemodel/api/FileSpace$a;) -> getDebugOutputPath
	v5 -> releaseOutputPath
	v5(Lcom/aide/codemodel/api/FileSpace$a;) -> getReleaseOutputPath
	
	
	
	
Lcom/aide/codemodel/api/collections/FunctionOfIntInt; -> Lcom/aide/codemodel/api/collections/FunctionOfIntInt;
	v5(I) -> get
Lcom/aide/codemodel/api/collections/SetOfFileEntry$b; -> Lcom/aide/codemodel/api/collections/SetOfFileEntry$Iterator;
	DW() -> init
	FH() -> nextKey
	j6() -> hasMoreElements
	
Lcom/aide/codemodel/api/collections/SetOfFileEntry;
	gn -> SIZES
	VH -> sizeexp
	DW -> filespace
	FH -> keys
	v5 -> slots
	Zo -> count
	j6 -> iterator
	EQ(Lcom/aide/codemodel/api/FileEntry;) -> remove
	
Labcd/a6; -> Lcom/aide/codemodel/language/java/JavaFormatOption;


Labcd/e3; -> Lcom/aide/codemodel/api/collections/HashtableOfInt;

Lcom/aide/codemodel/language/java/JavaCompiler; -> Lcom/aide/codemodel/language/java/JavaCompiler;
	Zo -> model
	Hw -> entitySpace
	v5 -> javaLanguage
	
	
Lcom/aide/engine/service/CodeAnalysisEngineService; -> Lcom/aide/engine/service/CodeAnalysisEngineService;
	mb -> navigationListener
	tp(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getEngine

	FH(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	DW(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getEngineListener

	Hw(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getGotoSymbolListener
	v5(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener

	VH(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	Zo(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getNavigationListener

	gn(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getCodeCompletionListener
	u7(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener

	j6(Ljava/lang/Object;ILandroid/app/Notification;) -> startForeground
	
	
	
Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl;
	jw -> engineSolution
	fY -> codeAnalysisEngineService
	Mk(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	k4(Lcom/aide/engine/EngineSolutionProject;) -> addEngineSolutionProject
	t4() -> updateEngineSolution
	GT(Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	Pm(Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener
	SO(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	nx(Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener
	Ft(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl$d; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl$d;
	j6 -> fileHighlightings
	DW -> mIHighlightingListener

Lcom/aide/engine/Engine; -> Lcom/aide/engine/Engine;
	Z3(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	aM -> engineSolution
	k1 -> codeModelsFactory
	wa() -> shutdown
	X7(Lcom/aide/engine/f0;) -> setUsageSearcherListener2
	
	
	
Lcom/aide/engine/e; -> Lcom/aide/engine/ICodeModelsFactory;
	DW() -> getID
	FH(Lcom/aide/codemodel/api/Model;Ljava/util/List;) -> makeCodeModels
	
Lcom/aide/engine/f0; -> Lcom/aide/engine/UsageSearcherListener;
Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl$f; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl$UsageSearcherListener2Impl;

Labcd/l4; -> Lcom/aide/ui/tools/ThreadFactory;
	DW() -> getSingleton
	DW -> threadFactory
	j6(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J) -> makeThread

Lcom/aide/engine/Engine$c; -> Lcom/aide/engine/Engine$c;
	pN -> engine
	
Lcom/aide/ui/services/EngineService; -> Lcom/aide/ui/services/EngineService;
	j6 -> mCodeAnalysisEngineService
	Hw -> mServiceConnection
	u7() -> bindCodeAnalysisEngineService
	Qq(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	aj(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
	
	
Lcom/aide/engine/service/CodeAnalysisEngineService$b; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeModelsFactory;












Lcom/aide/engine/OpenFile; -> Lcom/aide/engine/OpenFile;
	j6 -> charArray
	DW -> length
	
Lcom/aide/ui/views/editor/Font; -> Lcom/aide/ui/views/editor/Font;
	j6 -> textSize
Lcom/aide/ui/views/editor/Graphics; -> Lcom/aide/ui/views/editor/Graphics;
	j6 -> canvas
	DW -> textPaint
	v5 -> btmapPaint
	EQ() -> getClipBounds
	FH(Landroid/graphics/Bitmap;FFF) -> drawBitmap
	
	J0([CII[F) -> getTextWidths
	J8() -> restoreCanvas
	QX(Lcom/aide/ui/views/editor/w;) -> clipRect
	j6([CIIFF) -> drawText
	VH(Ljava/lang/String;FF) -> drawText
	XL(Lcom/aide/ui/views/editor/Color;) -> setColor
	aM(Lcom/aide/ui/views/editor/Font;) -> setFont
	tp() -> getClipBounds
	
	u7(FFFF) -> drawRect
	
	
Labcd/kg; -> Lcom/aide/ui/views/editor/Position;
	j6 -> line
	DW() -> getLine
	DW -> column
	j6() -> getColumn
	
Labcd/mg; -> Lcom/aide/ui/views/editor/SelectedRegion;
Lcom/aide/ui/views/editor/Caret; -> Lcom/aide/ui/views/editor/Caret;
	u7(Z) -> setCaretBlinks
	DW -> mOConsole
	j6 -> caretTimer
	Hw -> caretBlinks
	v5() -> cancel
	gn() -> createTimer
	Zo(Lcom/aide/ui/views/editor/OConsole;) -> setOConsole
	
	
	
Lcom/aide/ui/views/editor/OConsole;->Lcom/aide/ui/views/editor/OConsole;
	WB -> model
	sM -> firstSelectedLine
	e9 -> firstSelectedColumn
	a5 -> lastSelectedLine
	QO -> lastSelectedColumn
	zh -> fontHeight
	mb -> fontFamily
	Lz -> errorColor
	GK -> consoleMaxWidth
	cc -> collapsedIcon
	T6 -> collapsableIcon
	DY -> defaultTypeface
	Z1 -> tabSize
	pl -> testCaseFailedIcon
	GT -> testCaseFailedPreviouslyIcon
	Hl -> testCasePassedIcon
	Yi -> testCasePassedPreviouslyIcon
	sT -> todoColor
	PT -> traceColor
	Fd -> setWarningColor
	Jl -> caretColumn
	iW -> caretLine
	fY() -> hasFocusWrapper
	ei(Lcom/aide/ui/views/editor/CaretMoveListener;) -> addCaretMoveListener
	aX -> selectionVisibility
	kf() -> getSelectionVisibility
	qP -> selectionColor
	wE -> overwriteMode
	Ej -> overridingMethodIcon
	oh -> overriddenMethodIcon
	n5 -> insertTabsAsSpaces
	jw() -> getInsertTabsAsSpaces
	oa -> hyperlinkColor
	k1 -> hidden
	Z1()  -> isHidden
	TI -> expressionSteppingPointColor
	ct -> expressionDisplayColor
	kf -> caretVisibility
	BR -> selectionPointLine
	Nh -> selectionPointColumn
	gG -> selectionAnchorLine
	IS -> selectionAnchorColumn
	AE -> graphicsColor
	vJ()  -> copySelectedText
	Mz(I) -> readLineText
	iK -> curReadLineCount
	fh -> curReadColumnCount
	sv -> curReadTextChars
	jJ(II) -> getColumnWithTabs
	jw -> deviceFontSize
	E4 -> softMaxWidthRealColumn
	AR -> softMaxWidthLineColor
	MP -> stepbarColor
	nw(Lcom/aide/ui/views/editor/SelectionListener;) -> addSelectionListener
	hp -> selectionListenerVector
	ce -> separatorColor
	Q6(II) -> isInSelectedRegion
	Eq(II) -> getTextColorKind
	AL -> spaceCharWidth
	eU -> caret


Lcom/aide/ui/views/editor/EditorModel; -> Lcom/aide/ui/views/editor/EditorModel;

Lcom/aide/ui/views/editor/Model; -> Lcom/aide/ui/views/editor/Model;
	ei() -> getLineCount
	SI(I) -> getColumnCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	

Lcom/aide/common/KeyStrokeDetector; -> Lcom/aide/common/KeyStrokeDetector;
	gn -> rightShiftPhysical
	Zo(Lcom/aide/common/KeyStrokeDetector;) -> getRightShiftPhysical
	u7 -> leftShiftPhysical
	v5(Lcom/aide/common/KeyStrokeDetector;) -> getLeftShiftPhysical
	EQ -> isSoftKeyboard
	Hw(Lcom/aide/common/KeyStrokeDetector;) -> isSoftKeyboard
	J0 -> context
	j6 -> leftAlt
	DW -> rightAlt
	FH -> leftShift
	Hw -> rightShift
	v5 -> leftCtrl
	Zo -> rightCtrl
	we -> keyCharacterMap
	aM() -> isCtrl
	XL(I) -> isLeftCtrlPressed
	u7(Lcom/aide/common/KeyStrokeDetector;Landroid/view/KeyCharacterMap;) -> setKeyCharacterMap
	gn(Lcom/aide/common/KeyStrokeDetector;) -> getKeyCharacterMap
	tp(Lcom/aide/common/KeyStrokeDetector;) -> getContext
	rN(Landroid/content/Context;) -> onConfigChange
	J8(Lcom/aide/common/KeyStroke;) -> onKeyStroke
	EQ(Landroid/view/View;Lcom/aide/common/KeyStrokeDetector$KeyStrokeHandler;) -> createInputConnection
	Ws(IZ) -> onMetaKeysDown
	QX(IZ) -> onMetaKeysUp
	a8(ILandroid/view/KeyEvent;) -> onKeyDown
	lg(ILandroid/view/KeyEvent;) -> onKeyUp
	er(ILandroid/view/KeyEvent;Lcom/aide/common/KeyStrokeDetector$KeyStrokeHandler;) -> onKeyDown
	yS(ILandroid/view/KeyEvent;Lcom/aide/common/KeyStrokeDetector$KeyStrokeHandler;) -> onKeyUp
	Mr(ILandroid/view/KeyEvent;) -> makeKeyStroke
	

Lcom/aide/common/KeyStroke; -> Lcom/aide/common/KeyStroke;
	DW -> keyCode
	FH() -> getKeyCode
	j6 -> unicodeChar
	j6() -> getUnicodeChar
	FH -> isShiftPressed
	Hw -> isCtrlPressed
	v5 -> isAltPressed
	v5(Ljava/lang/String;) -> parse
	VH() -> toParse
	Zo(Lcom/aide/common/KeyStroke;) -> equalsKeyStroke
	
	
	
	