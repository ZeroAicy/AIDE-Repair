Labcd/a9; -> Labcd/a9;
	DW(Z) -> isVisible
Labcd/aa; -> Labcd/aa;
	FH() -> getMenuItemId
Labcd/ab; -> Labcd/ab;
	v5() -> getKeyStroke
Labcd/ac; -> Labcd/ac;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/ad; -> Labcd/ad;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/b9; -> Labcd/b9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ba; -> Labcd/ba;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/bb; -> Labcd/bb;
	v5() -> getKeyStroke
Labcd/bc; -> Labcd/bc;
	FH() -> getMenuItemId
Labcd/bd; -> Labcd/bd;
	v5() -> getKeyStroke
Labcd/c9; -> Labcd/c9;
	v5() -> getKeyStroke
Labcd/ca; -> Labcd/ca;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/cb; -> Labcd/cb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/cc; -> Labcd/cc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/cd; -> Labcd/cd;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/cg; -> Labcd/cg;
	v5() -> getKeyStroke
Labcd/d9; -> Labcd/d9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/da; -> Labcd/da;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/db; -> Labcd/db;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/dc; -> Labcd/dc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/e9; -> Labcd/e9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ea; -> Labcd/ea;
	FH() -> getMenuItemId
Labcd/eb; -> Labcd/eb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/ec; -> Labcd/ec;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/eg; -> Labcd/eg;
	FH() -> getMenuItemId
Labcd/f0; -> Labcd/f0;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/f9; -> Labcd/f9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/fa; -> Labcd/fa;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/fb; -> Labcd/fb;
	FH() -> getMenuItemId
Labcd/fc; -> Labcd/fc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/g9; -> Labcd/g9;
	FH() -> getMenuItemId
Labcd/ga; -> Labcd/ga;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/gb; -> Labcd/gb;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/gc; -> Labcd/gc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/gg; -> Labcd/gg;
	v5() -> getKeyStroke
Labcd/h9; -> Labcd/h9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ha; -> Labcd/ha;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/hb; -> Labcd/hb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/hc; -> Labcd/hc;
	FH() -> getMenuItemId
Labcd/i2; -> Labcd/i2;
	FH -> clear
	DW -> size
	j6 -> syntaxTreeStylesList
	Hw() -> createSyntaxTreeStylesList
	j6() -> makeSyntaxTreeStyles
Labcd/i9; -> Labcd/i9;
	FH() -> getMenuItemId
Labcd/ia; -> Labcd/ia;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ib; -> Labcd/ib;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ic; -> Labcd/ic;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/j9; -> Labcd/j9;
	FH() -> getMenuItemId
Labcd/ja; -> Labcd/ja;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/jb; -> Labcd/jb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/jc; -> Labcd/jc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/k0; -> Labcd/k0;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/k9; -> Labcd/k9;
	FH() -> getMenuItemId
Labcd/ka; -> Labcd/ka;
	FH() -> getMenuItemId
Labcd/kb; -> Labcd/kb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/kc; -> Labcd/kc;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/l9; -> Labcd/l9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/la; -> Labcd/la;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/lb; -> Labcd/lb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/lc; -> Labcd/lc;
	v5() -> getKeyStroke
Labcd/m1; -> Labcd/m1;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/m9; -> Labcd/m9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ma; -> Labcd/ma;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/mb; -> Labcd/mb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/mc; -> Labcd/mc;
	v5() -> getKeyStroke
Labcd/n9; -> Labcd/n9;
	FH() -> getMenuItemId
Labcd/na; -> Labcd/na;
	FH() -> getMenuItemId
Labcd/nb; -> Labcd/nb;
	DW(Z) -> isVisible
Labcd/nc; -> Labcd/nc;
	v5() -> getKeyStroke
Labcd/o9; -> Labcd/o9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/oa; -> Labcd/oa;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ob; -> Labcd/ob;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/oc; -> Labcd/oc;
	DW(Z) -> isVisible
Labcd/p9; -> Labcd/p9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/pa; -> Labcd/pa;
	FH() -> getMenuItemId
Labcd/pb; -> Labcd/pb;
	FH() -> getMenuItemId
Labcd/pc; -> Labcd/pc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/q9; -> Labcd/q9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/qa; -> Labcd/qa;
	FH() -> getMenuItemId
Labcd/qb; -> Labcd/qb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/qc; -> Labcd/qc;
	DW(Z) -> isVisible
Labcd/r9; -> Labcd/r9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ra; -> Labcd/ra;
	FH() -> getMenuItemId
Labcd/rb; -> Labcd/rb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/rc; -> Labcd/rc;
	FH() -> getMenuItemId
Labcd/s1; -> Labcd/s1;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/s9; -> Labcd/s9;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/sa; -> Labcd/sa;
	FH() -> getMenuItemId
Labcd/sb; -> Labcd/sb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/sc; -> Labcd/sc;
	v5() -> getKeyStroke
Labcd/t9; -> Labcd/t9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/ta; -> Labcd/ta;
	FH() -> getMenuItemId
Labcd/tb; -> Labcd/tb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/tc; -> Labcd/tc;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/tf; -> Labcd/tf;
	DW(Z) -> isVisible
Labcd/u9; -> Labcd/u9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/ua; -> Labcd/ua;
	FH() -> getMenuItemId
Labcd/ub; -> Labcd/ub;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/uc; -> Labcd/uc;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/v9; -> Labcd/v9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/va; -> Labcd/va;
	v5() -> getKeyStroke
Labcd/vb; -> Labcd/vb;
	v5() -> getKeyStroke
Labcd/vc; -> Labcd/vc;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/w9; -> Labcd/w9;
	v5() -> getKeyStroke
Labcd/wa; -> Labcd/wa;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/wb; -> Labcd/wb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/wc; -> Labcd/wc;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/x9; -> Labcd/x9;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/xa; -> Labcd/xa;
	v5() -> getKeyStroke
Labcd/xb; -> Labcd/xb;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/xc; -> Labcd/xc;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/ya; -> Labcd/ya;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/yb; -> Labcd/yb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
Labcd/yc; -> Labcd/yc;
	DW(Z) -> isVisible
Labcd/z6; -> Labcd/z6;
	gn(Lcom/aide/codemodel/api/SyntaxTree;Lcom/aide/codemodel/api/collections/SetOfInt;) -> analyzeEveryIdentifiers
Labcd/z8; -> Labcd/z8;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/za; -> Labcd/za;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/zb; -> Labcd/zb;
	v5() -> getKeyStroke
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/zc; -> Labcd/zc;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Lcom/aide/codemodel/AIDEModel; -> Lcom/aide/codemodel/AIDEModel;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/j1; -> Lcom/aide/codemodel/api/ArrayType;
	we -> elementType
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	oY() -> getElementType
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/k1$b; -> Lcom/aide/codemodel/api/ClassType$Data;
	I -> I_未知
	nw -> absoluteTypeParameterCount
	KD -> absoluteTypeParameters
	Sf -> allExplicitMemberMethods
	BT -> allMemberClasstypes
	sG -> allMemberFields
	ef -> allMemberMethods
	vJ -> allMemberOperators
	vy -> allMemberTypes
	rN -> allSuperClasstypes
	er -> allSuperTypes
	g3 -> containingTypesOfMembers
	gW -> corruptedSupertypes
	yS -> cycliclyDefined
	ca -> delegateOrEnumtype
	dx -> dx_未知
	J0 -> endColumn
	we -> endLine
	XL -> hasDocumentation
	Ws -> hasSupertypes
	v5 -> idEndColumn
	FH -> idLine
	Hw -> idStartColumn
	QX -> inStaticMethod
	ro -> inheritedMethodPairs
	P8 -> memberClasstypes
	cb -> memberConstructors
	cn -> memberFields
	sh -> memberMethods
	Mz -> memberOperators
	ei -> memberParametertypes
	u7 -> modifierSendColumn
	VH -> modifierSendLine
	J8 -> modifiers
	gn -> modifiersStartColumn
	Zo -> modifiersStartLine
	EQ -> startColumn
	tp -> startLine
	Mr -> superClasstypes
	aM -> superClasstypesLoaded
	j3 -> superClasstypesLoading
	lg -> superTypes
	U2 -> superTypesLoaded
	a8 -> superTypesLoading
	j6 -> syntaxLoaded
	SI -> typeParameters
	DW -> typesLoaded
	x9 -> x9_未知
Labcd/k1$a; -> Lcom/aide/codemodel/api/ClassType$a;
Labcd/k1; -> Lcom/aide/codemodel/api/ClassType;
	er -> data
	Ws -> declarationNumber
	j3 -> enclosingClassType
	J8 -> file
	J0 -> id
	Mr -> identifier
	lg -> isAnonymous
	a8 -> isLocal
	U2 -> isModule
	XL -> namespace
	EQ -> space
	QX -> syntaxLoaded
	aM -> topLevelClassType
	rN -> typeParameterCount
	jO() -> areSuperClasstypesLoaded
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	ko(Labcd/u1;) -> declareConstructor
	ye() -> declareCycliclyDefined
	AL() -> declareSuperClasstypesLoaded
	w9() -> declareSuperClasstypesLoading
	Q6() -> getAbsoluteParametertypeCount
	pO() -> getAllPartialClasstypes
	Gj() -> getAllSuperTypes
	pN() -> getContainer
	oy(Labcd/u1;) -> getContainingTypeOfMember
	oY() -> getData
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	Za() -> getNamespace
	sy() -> getSemantic
	aj() -> getSuperType
	Fd() -> invalidate
	rN() -> isArrayType
	er() -> isClassType
	E4() -> isCycliclyDefined
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Hl() -> isSealed
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	T6() -> isToplevel
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
	N0() -> loadSyntax
Labcd/n1; -> Lcom/aide/codemodel/api/Entity;
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	rN() -> isArrayType
	er() -> isClassType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Lcom/aide/codemodel/api/o1$a; -> Lcom/aide/codemodel/api/EntitySpace$FileInfo;
	Zo -> archiveVersion
	VH -> classdecldigest
	XL -> classtypes
	U2 -> classtypesExist
	J0 -> corrupted
	gn -> decldigest
	j6 -> entitySpace
	FH -> fileEntry
	DW -> fileSpace
	Hw -> languageId
	rN -> mainClassType
	J8 -> members
	aM -> membersExist
	QX -> methodparametertypes
	Mr -> methodparametertypesExist
	a8 -> namespaces
	we -> packageLoaded
	Ws -> parametertypes
	j3 -> parametertypesExist
	EQ -> positionsLoaded
	u7 -> syntaxloaded
	er -> toplevelclasstypeIdentifiers
	lg -> toplevelclasstypes
	tp -> typesLoaded
	v5 -> version
	Hw() -> canDeclareSyntax
	EQ() -> getAllDeclarations
	we() -> getArchiveVersion
	J0() -> getClassDeclarationDigest
	QX() -> getDeclarationDigest
	Mr() -> getLanguage
	Zo(I) -> getMember
	gW() -> getVersion
	BT() -> invalidate
	vy() -> invalidateNamespaces
	P8() -> invalidatePositions
	SI() -> loadPositions
	KD() -> loadSyntax
	ro() -> loadTypes
Lcom/aide/codemodel/api/EntitySpace; -> Lcom/aide/codemodel/api/EntitySpace;
	a8 -> allClassTypes
	J8 -> arrayTypes
	J0 -> entities
	we -> entityCount
	VH -> fileInfoArray
	EQ -> fileInheritanceDependencies
	j6 -> fileSpace
	FH -> identifiers
	rN -> inferAlgorithm
	aM -> methodParameterTypeVariables
	Zo -> namespacesLoaded
	XL -> parameterizedTypes
	QX -> pointerTypes
	Ws -> primitiveTypes
	Mr -> rootNamespace
	v5 -> superClassTypeAnalyzedClasses
	DW -> syntaxTreeSpace
	tp -> usedDirectories
	Zo() -> canDeclareOtherSuperClasstypes
	J8(Labcd/n1;) -> declareEntity
	ei(Labcd/k1;Labcd/k1;) -> declareSuperClasstype
	jJ(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> getAllClasstypes
	aq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;I) -> getClasstype
	Z1(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> getFileInfo
	j6(Lcom/aide/codemodel/api/EntitySpace;) -> getFileSpace
	ye(Labcd/n1;) -> getId
	cT(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> getRootClasstype
	q7() -> getRootNamespace
	FH(Lcom/aide/codemodel/api/EntitySpace;) -> getSyntaxTreeSpace
	n5(Lcom/aide/codemodel/api/FileEntry;) -> getToplevelClasstypesOfFile
	Q6() -> invalidateAll
	eU(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
	e3() -> loadAllClasstypes
	fN(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> loadEntries
	Gj() -> loadNamespaces
	pO(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Labcd/k1;) -> loadSuperClasstypes
	aX(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> loadSyntax
	AE() -> update
Lcom/aide/codemodel/api/p1$a; -> Lcom/aide/codemodel/api/ErrorTable$Error;
Lcom/aide/codemodel/api/p1$c; -> Lcom/aide/codemodel/api/ErrorTable$Fix;
Lcom/aide/codemodel/api/p1$b; -> Lcom/aide/codemodel/api/ErrorTable$b;
Lcom/aide/codemodel/api/p1$d; -> Lcom/aide/codemodel/api/ErrorTable$d;
Lcom/aide/codemodel/api/ErrorTable; -> Lcom/aide/codemodel/api/ErrorTable;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Lcom/aide/codemodel/api/FileEntry; -> Lcom/aide/codemodel/api/FileEntry;
	myFileSpace -> fileSpace
	getID() -> getId
	g3(Lcom/aide/codemodel/api/FileEntry;) -> isReferable
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Lcom/aide/codemodel/api/FileSpace$a; -> Lcom/aide/codemodel/api/FileSpace$Assembly;
	FH -> configuration
	Hw -> debugOutputPath
	j6 -> projectFilePath
	v5 -> releaseOutputPath
	DW -> rootNamespace
	Zo -> targetVersion
	Hw(Lcom/aide/codemodel/api/FileSpace$a;) -> getDebugOutputPath
	v5(Lcom/aide/codemodel/api/FileSpace$a;) -> getReleaseOutputPath
	gn(Lcom/aide/codemodel/api/FileSpace$a;) -> getTargetVersion
Lcom/aide/codemodel/api/FileSpace; -> Lcom/aide/codemodel/api/FileSpace;
	Ws(Lcom/aide/codemodel/api/FileEntry;) -> getAssembly
	er(I) -> getCodeModel
	ro(Lcom/aide/codemodel/api/FileEntry;) -> getCodeModelWrapper
	Mr(Lcom/aide/codemodel/api/FileEntry;) -> getDebugOutputPath
	sG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> getFileEntryLanguageId
	P8(Lcom/aide/codemodel/api/FileEntry;) -> getId
	ei(I) -> getLanguage
	nw(Lcom/aide/codemodel/api/abstraction/Language;) -> getLanguageId
	U2(Lcom/aide/codemodel/api/FileEntry;) -> getReleaseOutputPath
	ef(Lcom/aide/codemodel/api/FileEntry;) -> getTargetVersion
	sy(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/FileEntry;) -> isReferableFrom
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
	br(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> loadEntries
Lcom/aide/codemodel/api/IdentifierSpace; -> Lcom/aide/codemodel/api/IdentifierSpace;
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/u1$b; -> Lcom/aide/codemodel/api/Member$Data;
	BT -> modifierFlags
	DW -> syntaxLoaded
Labcd/u1$c; -> Lcom/aide/codemodel/api/Member$InferAlgorithm;
Labcd/u1$a; -> Lcom/aide/codemodel/api/Member$a;
Labcd/u1; -> Lcom/aide/codemodel/api/Member;
	J0 -> data
	VH -> entitySpace
	tp -> file
	Zo -> fileSpace
	u7 -> id
	gn -> identifierSpace
	sG() -> data
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	n5() -> invalidate
	Q6() -> isAbstract
	rN() -> isArrayType
	er() -> isClassType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
	BR() -> loadSyntax
Labcd/v1; -> Lcom/aide/codemodel/api/MethodParameterType;
	U2 -> boundTypes
	J8 -> declarationNumber
	XL -> endColumn
	J0 -> file
	tp -> id
	aM -> identifier
	Ws -> line
	j3 -> method
	Mr -> number
	QX -> startColumn
	a8 -> typesLoaded
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	qp() -> invalidate
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/w1; -> Lcom/aide/codemodel/api/MethodParameterTypeVariable;
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Lcom/aide/codemodel/api/Model; -> Lcom/aide/codemodel/api/Model;
	Mr -> errorTable
	XL -> syntaxTreeSpace
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/z1; -> Lcom/aide/codemodel/api/Namespace;
	QX -> assemblies
	EQ -> enclosingNamespace
	Zo -> entity
	we -> exists
	tp -> identifier
	J8 -> memberClasstypes
	Ws -> memberFiles
	J0 -> memberNamespaces
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	br() -> invalidate
	rN() -> isArrayType
	er() -> isClassType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/b2; -> Lcom/aide/codemodel/api/ParameterType;
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	jw() -> invalidate
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/a2; -> Lcom/aide/codemodel/api/ParameterizedType;
	J0 -> absoluteArgumentTypes
	we -> classType
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	FN() -> getAbsoluteArgumentTypes
	jO() -> getAbsoluteArgumentVariances
	oY() -> getAllSuperTypes
	ko() -> getClassType
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	Ev() -> invalidate
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
	WB(Lcom/aide/codemodel/api/Type;) -> replaceType
Labcd/c2; -> Lcom/aide/codemodel/api/PointerType;
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Labcd/d2; -> Lcom/aide/codemodel/api/PrimitiveType;
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Lcom/aide/codemodel/api/SyntaxTree; -> Lcom/aide/codemodel/api/SyntaxTree;
	QX -> classdecldigest
	XL -> publicDecldigest
	j6(III) -> afterPosition
	FH(III) -> beforePosition
	containsPositionExt(III) -> containsPosition
	gn(III) -> containsPositionExt
	J8(ILcom/aide/codemodel/api/Type;) -> declareAttrInvocationType
	QX(IILabcd/n1;) -> declareAttrReferenceKind
	Of(I) -> declareAttrTarget
	aM(ILcom/aide/codemodel/api/Type;) -> declareAttrType
	Mr(II) -> declareAttrVariableSlot
	BT(IZ[IIIII) -> declareNode
	vy(IZ[IIIIII) -> declareNode
	ei(II) -> getArgumentsNodeAt
	nw(III) -> getArgumentsNodeAt
	ro(I) -> getAttrInvocationType
	dx(I) -> getAttrTarget
	sG(I) -> getAttrType
	Sf(I) -> getAttrVariableSlot
	SI(I) -> getAttribute
	I(IIII) -> getBlockNodeAt
	OW() -> getClassDeclarationDigest
	br(I) -> getClassDeclarationNode
	XX(II) -> getClassDeclarationNode
	Xa(II) -> getExpressionNodeAt
	hz() -> getFile
	mb() -> getImportEndLine
	jw() -> getImportNodePairs
	zh(I) -> getLeftSisterNode
	q7(I) -> getMemberDeclarationNode
	Z1(II) -> getMemberDeclarationNode
	Q6(IIII) -> getMethodNodeAt
	kf(IIIII) -> getMethodNodeAt
	iW(III) -> getMethodNodeNear
	eU() -> getModel
	e3() -> getNamespaceNodePairs
	aX() -> getPublicDeclarationDigest
	QO(IIII) -> getReadExpressionNodeAt
	sM(IIIII) -> getReadExpressionNodeAt
	a5(I) -> getRightSisterNode
	fN(IIIII) -> getSyntaxTagNodeAt
	Gj(IIIIII) -> getSyntaxTagNodeAt
	Jm(II) -> getTokenNodeAt
	Bx(III) -> getTokenNodeAt
	MP(I) -> hasAttrInvocationType
	PT(I) -> hasAttrType
	Lz(I) -> isArgumentsNode
	E4(I) -> isBlockNode
	xg(I) -> isChangedExpressionNode
	hp(I) -> isClassDeclarationNode
	PH(I) -> isComment
	Yi(II) -> isEnclosingNode
	Hl(I) -> isFieldDeclarationNode
	cc(I) -> isMethodDeclarationNode
	isFieldDeclarationNode(I) -> isMethodOrClassOrFieldDeclarationNode
	om(I) -> isParameters
Lcom/aide/codemodel/api/SyntaxTreeSpace; -> Lcom/aide/codemodel/api/SyntaxTreeSpace;
	VH -> astlocks
	Hw -> model
	J8(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> getSyntaxTree
	U2(Lcom/aide/codemodel/api/SyntaxTree;) -> releaseSyntaxTree
Lcom/aide/codemodel/api/SyntaxTreeSytles; -> Lcom/aide/codemodel/api/SyntaxTreeStyles;
Lcom/aide/codemodel/api/Type; -> Lcom/aide/codemodel/api/Type;
	Mz(Lcom/aide/codemodel/api/Type;) -> containsType
	I() -> containsVariable
	Hw() -> getEnclosingClassType
	VH() -> getFile
	gn() -> getFullyQualifiedNameString
	tp() -> getHTMLString
	we() -> getId
	J0() -> getIdentifier
	XL() -> getLanguage
	aM() -> getModifiers
	lg() -> getNameString
	sy() -> getSemantic
	aj() -> getSuperType
	rN() -> isArrayType
	er() -> isClassType
	OW() -> isDelegateType
	br() -> isEnumType
	XG(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isImplicitConvertibleTo
	jJ() -> isInterfaceType
	gW() -> isMember
	BT() -> isMethodParameterType
	vy() -> isMethodParameterTypeVariable
	P8() -> isNamespace
	nw() -> isParameterType
	ei() -> isParameterizedType
	SI() -> isPointerType
	KD() -> isPrimitiveType
	CU(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;) -> isReferable
	Xa() -> isSealedType
	Eq(Lcom/aide/codemodel/api/FileEntry;Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/Type;) -> isSubTypeOf
	cn() -> isType
	store(Lcom/aide/codemodel/api/collections/StoreInputStream;) -> load
Lcom/aide/codemodel/api/Variable; -> Lcom/aide/codemodel/api/Variable;
	VH -> type
	FH() -> getHTMLString
Lcom/aide/codemodel/api/abstraction/CodeAnalyzer; -> Lcom/aide/codemodel/api/abstraction/CodeAnalyzer;
	gn(Lcom/aide/codemodel/api/SyntaxTree;Lcom/aide/codemodel/api/collections/SetOfInt;) -> analyzeEveryIdentifiers
Lcom/aide/codemodel/api/abstraction/CodeRenderer; -> Lcom/aide/codemodel/api/abstraction/CodeRenderer;
	Hw(Labcd/n1;) -> getFullyQualifiedNameString
	DW(Labcd/n1;) -> getHTMLString
	Zo(Lcom/aide/codemodel/api/Variable;) -> getHTMLString
	FH(I) -> getModifiersString
	j6(Labcd/n1;) -> getNameString
Lcom/aide/codemodel/api/abstraction/SignatureAnalyzer; -> Lcom/aide/codemodel/api/abstraction/SignatureAnalyzer;
	u7(Lcom/aide/codemodel/api/FileEntry;) -> doLoadPositions
	VH(Labcd/k1;) -> doLoadSuperClassTypes
	gn(Lcom/aide/codemodel/api/FileEntry;) -> doLoadSyntax
	FH(Lcom/aide/codemodel/api/FileEntry;) -> doLoadTypes
	J0(Lcom/aide/codemodel/api/SyntaxTree;) -> getClassDeclarationDigest
	J8(Lcom/aide/codemodel/api/SyntaxTree;) -> getPublicDeclarationDigest
Lcom/aide/codemodel/api/abstraction/Syntax; -> Lcom/aide/codemodel/api/abstraction/Syntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/api/callback/HighlighterCallback; -> Lcom/aide/codemodel/api/callback/HighlighterCallback;
	u7(Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/SyntaxTreeSytles;) -> addSyntaxTreeStyles
Labcd/q3$a; -> Lcom/aide/codemodel/api/collections/ArrayOf$a;
Labcd/q3$b; -> Lcom/aide/codemodel/api/collections/ArrayOf$b;
Labcd/q3; -> Lcom/aide/codemodel/api/collections/ArrayOf;
Lcom/aide/codemodel/api/collections/FunctionOfIntInt$b; -> Lcom/aide/codemodel/api/collections/FunctionOfIntInt$Iterator;
	j6() -> hasMoreElements
	DW() -> init
	FH() -> nextKey
	Hw() -> nextValue
Lcom/aide/codemodel/api/collections/FunctionOfIntInt; -> Lcom/aide/codemodel/api/collections/FunctionOfIntInt;
	j6 -> DEFAULT_ITERATOR
	DW -> keys
	Hw -> values
	v5(I) -> get
	u7(I) -> remove
Labcd/e3$a; -> Lcom/aide/codemodel/api/collections/HashtableOfInt$a;
Labcd/e3$b; -> Lcom/aide/codemodel/api/collections/HashtableOfInt$b;
Labcd/e3; -> Lcom/aide/codemodel/api/collections/HashtableOfInt;
Labcd/h3; -> Lcom/aide/codemodel/api/collections/ListOf;
	tp(I) -> setSize
Lcom/aide/codemodel/api/collections/ListOfInt; -> Lcom/aide/codemodel/api/collections/ListOfInt;
	v5() -> pop
	Zo(I) -> push
Labcd/l3$a; -> Lcom/aide/codemodel/api/collections/MapOf$a;
Labcd/l3$b; -> Lcom/aide/codemodel/api/collections/MapOf$b;
Labcd/l3; -> Lcom/aide/codemodel/api/collections/MapOf;
	Hw() -> clear
	Zo(Labcd/n1;) -> contains
	EQ(Labcd/n1;) -> get
	J0(Labcd/n1;Labcd/n1;) -> insert
Labcd/m3$b; -> Lcom/aide/codemodel/api/collections/MapOfInt$Iterator;
	j6() -> hasMoreElements
	FH(I) -> init
	v5() -> nextValue
Labcd/m3$a; -> Lcom/aide/codemodel/api/collections/MapOfInt$a;
Labcd/m3; -> Lcom/aide/codemodel/api/collections/MapOfInt;
	j6 -> DEFAULT_ITERATOR
	tp(ILabcd/n1;) -> insert
Labcd/n3; -> Lcom/aide/codemodel/api/collections/MapOfIntArrayInt;
Lcom/aide/codemodel/api/collections/MapOfIntInt; -> Lcom/aide/codemodel/api/collections/MapOfIntInt;
	FH() -> clear
Labcd/r3$a; -> Lcom/aide/codemodel/api/collections/MapOfLongInt$a;
Labcd/r3$b; -> Lcom/aide/codemodel/api/collections/MapOfLongInt$b;
Labcd/r3; -> Lcom/aide/codemodel/api/collections/MapOfLongInt;
Lcom/aide/codemodel/api/collections/RelationOfIntInt; -> Lcom/aide/codemodel/api/collections/RelationOfIntInt;
	FH(II) -> contains
Labcd/v3$b; -> Lcom/aide/codemodel/api/collections/SetOf$Iterator;
	j6() -> hasMoreElements
	DW() -> init
	FH() -> nextKey
Labcd/v3$a; -> Lcom/aide/codemodel/api/collections/SetOf$a;
Labcd/v3; -> Lcom/aide/codemodel/api/collections/SetOf;
	j6 -> DEFAULT_ITERATOR
	FH() -> clear
	Hw(Labcd/n1;) -> contains
	gn(Labcd/n1;) -> put
Lcom/aide/codemodel/api/collections/SetOfFileEntry$b; -> Lcom/aide/codemodel/api/collections/SetOfFileEntry$Iterator;
	j6() -> hasMoreElements
	DW() -> init
	FH() -> nextKey
Lcom/aide/codemodel/language/classfile/JavaBinaryLanguage; -> Lcom/aide/codemodel/language/classfile/JavaBinaryLanguage;
	EQ() -> getCodeAnalyzer
	J0() -> getSignatureAnalyzer
	J8() -> getTypeSystem
Lcom/aide/codemodel/language/classfile/JavaBinarySignatureAnalyzer; -> Lcom/aide/codemodel/language/classfile/JavaBinarySignatureAnalyzer;
	u7(Lcom/aide/codemodel/api/FileEntry;) -> doLoadPositions
	VH(Labcd/k1;) -> doLoadSuperClassTypes
	gn(Lcom/aide/codemodel/api/FileEntry;) -> doLoadSyntax
	FH(Lcom/aide/codemodel/api/FileEntry;) -> doLoadTypes
	J0(Lcom/aide/codemodel/api/SyntaxTree;) -> getClassDeclarationDigest
	J8(Lcom/aide/codemodel/api/SyntaxTree;) -> getPublicDeclarationDigest
Lcom/aide/codemodel/language/cpp/CppSyntax; -> Lcom/aide/codemodel/language/cpp/CppSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/css/CssCodeAnalyzer; -> Lcom/aide/codemodel/language/css/CssCodeAnalyzer;
	gn(Lcom/aide/codemodel/api/SyntaxTree;Lcom/aide/codemodel/api/collections/SetOfInt;) -> analyzeEveryIdentifiers
Lcom/aide/codemodel/language/css/CssSyntax; -> Lcom/aide/codemodel/language/css/CssSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/dtd/DtdSyntax; -> Lcom/aide/codemodel/language/dtd/DtdSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/java/JSharpCommentsSyntax; -> Lcom/aide/codemodel/language/java/JSharpCommentsSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/java/JavaCodeAnalyzer; -> Lcom/aide/codemodel/language/java/JavaCodeAnalyzer;
	gn -> entitySpace
	VH -> errorTable
	Zo -> fileSpace
	v5 -> identifierSpace
	EQ -> model
	tp -> syntaxTreeSpace
	gn(Lcom/aide/codemodel/api/SyntaxTree;Lcom/aide/codemodel/api/collections/SetOfInt;) -> analyzeEveryIdentifiers
Lcom/aide/codemodel/language/java/JavaCodeRenderer; -> Lcom/aide/codemodel/language/java/JavaCodeRenderer;
	Hw(Labcd/n1;) -> getFullyQualifiedNameString
	DW(Labcd/n1;) -> getHTMLString
	Zo(Lcom/aide/codemodel/api/Variable;) -> getHTMLString
	FH(I) -> getModifiersString
	j6(Labcd/n1;) -> getNameString
Lcom/aide/codemodel/language/java/JavaCompiler; -> Lcom/aide/codemodel/language/java/JavaCompiler;
	Hw -> entitySpace
	v5 -> javaLanguage
	Zo -> model
Labcd/a6; -> Lcom/aide/codemodel/language/java/JavaFormatOption;
Lcom/aide/codemodel/language/java/JavaLanguage; -> Lcom/aide/codemodel/language/java/JavaLanguage;
	EQ() -> getCodeAnalyzer
	J0() -> getSignatureAnalyzer
	J8() -> getTypeSystem
Lcom/aide/codemodel/language/java/JavaSignatureAnalyzer; -> Lcom/aide/codemodel/language/java/JavaSignatureAnalyzer;
	u7(Lcom/aide/codemodel/api/FileEntry;) -> doLoadPositions
	VH(Labcd/k1;) -> doLoadSuperClassTypes
	gn(Lcom/aide/codemodel/api/FileEntry;) -> doLoadSyntax
	FH(Lcom/aide/codemodel/api/FileEntry;) -> doLoadTypes
	J0(Lcom/aide/codemodel/api/SyntaxTree;) -> getClassDeclarationDigest
	J8(Lcom/aide/codemodel/api/SyntaxTree;) -> getPublicDeclarationDigest
Lcom/aide/codemodel/language/java/JavaSyntax; -> Lcom/aide/codemodel/language/java/JavaSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/js/JavaScriptCodeRenderer; -> Lcom/aide/codemodel/language/js/JavaScriptCodeRenderer;
	Hw(Labcd/n1;) -> getFullyQualifiedNameString
	DW(Labcd/n1;) -> getHTMLString
	Zo(Lcom/aide/codemodel/api/Variable;) -> getHTMLString
	FH(I) -> getModifiersString
	j6(Labcd/n1;) -> getNameString
Lcom/aide/codemodel/language/js/JavaScriptCommentsSyntax; -> Lcom/aide/codemodel/language/js/JavaScriptCommentsSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/js/JavaScriptSignatureAnalyzer; -> Lcom/aide/codemodel/language/js/JavaScriptSignatureAnalyzer;
	u7(Lcom/aide/codemodel/api/FileEntry;) -> doLoadPositions
	VH(Labcd/k1;) -> doLoadSuperClassTypes
	gn(Lcom/aide/codemodel/api/FileEntry;) -> doLoadSyntax
	FH(Lcom/aide/codemodel/api/FileEntry;) -> doLoadTypes
	J0(Lcom/aide/codemodel/api/SyntaxTree;) -> getClassDeclarationDigest
	J8(Lcom/aide/codemodel/api/SyntaxTree;) -> getPublicDeclarationDigest
Lcom/aide/codemodel/language/js/JavaScriptSyntax; -> Lcom/aide/codemodel/language/js/JavaScriptSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/codemodel/language/xml/XmlCodeAnalyzer; -> Lcom/aide/codemodel/language/xml/XmlCodeAnalyzer;
	gn(Lcom/aide/codemodel/api/SyntaxTree;Lcom/aide/codemodel/api/collections/SetOfInt;) -> analyzeEveryIdentifiers
Lcom/aide/codemodel/language/xml/XmlSyntax; -> Lcom/aide/codemodel/language/xml/XmlSyntax;
	kQ(Lcom/aide/codemodel/api/SyntaxTree;) -> getImportEndLine
	DW(I) -> getTokenLength
	BT(I) -> isBlock
	aj(I) -> isBooleanLiteral
	XX(Lcom/aide/codemodel/api/SyntaxTree;I) -> isChangedExpressionNode
	SI(I) -> isClassBody
	J8(I) -> isClassDeclaration
	j6(I) -> isComment
	lp(I) -> isDocComment
	gW(I) -> isExpression
	rN(I) -> isFieldDeclaration
	yO(I) -> isMemberDeclaration
	J0(I) -> isMethodDeclaration
	nw(I) -> isOperator
	sG(I) -> isSeparator
	isClassDeclaration(I) -> isTypeIdentifier
Lcom/aide/common/KeyStroke; -> Lcom/aide/common/KeyStroke;
	v5 -> isAltPressed
	Hw -> isCtrlPressed
	FH -> isShiftPressed
	DW -> keyCode
	j6 -> unicodeChar
	Zo(Lcom/aide/common/KeyStroke;) -> equalsKeyStroke
	FH() -> getKeyCode
	j6() -> getUnicodeChar
	v5(Ljava/lang/String;) -> parse
	VH() -> toParse
Lcom/aide/common/KeyStrokeDetector; -> Lcom/aide/common/KeyStrokeDetector;
	J0 -> context
	EQ -> isSoftKeyboard
	we -> keyCharacterMap
	j6 -> leftAlt
	v5 -> leftCtrl
	FH -> leftShift
	u7 -> leftShiftPhysical
	DW -> rightAlt
	Zo -> rightCtrl
	Hw -> rightShift
	gn -> rightShiftPhysical
	EQ(Landroid/view/View;Lcom/aide/common/KeyStrokeDetector$KeyStrokeHandler;) -> createInputConnection
	tp(Lcom/aide/common/KeyStrokeDetector;) -> getContext
	gn(Lcom/aide/common/KeyStrokeDetector;) -> getKeyCharacterMap
	v5(Lcom/aide/common/KeyStrokeDetector;) -> getLeftShiftPhysical
	Zo(Lcom/aide/common/KeyStrokeDetector;) -> getRightShiftPhysical
	aM() -> isCtrl
	XL(I) -> isLeftCtrlPressed
	Hw(Lcom/aide/common/KeyStrokeDetector;) -> isSoftKeyboard
	Mr(ILandroid/view/KeyEvent;) -> makeKeyStroke
	rN(Landroid/content/Context;) -> onConfigChange
	a8(ILandroid/view/KeyEvent;) -> onKeyDown
	er(ILandroid/view/KeyEvent;Lcom/aide/common/KeyStrokeDetector$KeyStrokeHandler;) -> onKeyDown
	J8(Lcom/aide/common/KeyStroke;) -> onKeyStroke
	lg(ILandroid/view/KeyEvent;) -> onKeyUp
	yS(ILandroid/view/KeyEvent;Lcom/aide/common/KeyStrokeDetector$KeyStrokeHandler;) -> onKeyUp
	Ws(IZ) -> onMetaKeysDown
	QX(IZ) -> onMetaKeysUp
	u7(Lcom/aide/common/KeyStrokeDetector;Landroid/view/KeyCharacterMap;) -> setKeyCharacterMap
Lcom/aide/engine/Engine$c$HighlighterCallback; -> Lcom/aide/engine/Engine$c$HighlighterCallback;
	u7(Lcom/aide/codemodel/api/abstraction/Language;Lcom/aide/codemodel/api/SyntaxTreeSytles;) -> addSyntaxTreeStyles
Lcom/aide/engine/Engine$c; -> Lcom/aide/engine/Engine$c;
	pN -> engine
Lcom/aide/engine/Engine; -> Lcom/aide/engine/Engine;
	k1 -> codeModelsFactory
	aM -> engineSolution
	Ws -> lock1
	QX -> lock2
	XL -> lock3
	BT -> shutdown
	iW(Lcom/aide/engine/Engine;) -> getLock1
	U2(Lcom/aide/engine/Engine;) -> getLock2
	Z3(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	X7(Lcom/aide/engine/f0;) -> setUsageSearcherListener2
	wa() -> shutdown
Lcom/aide/engine/e; -> Lcom/aide/engine/ICodeModelsFactory;
	DW() -> getId
	FH(Lcom/aide/codemodel/api/Model;Ljava/util/List;) -> makeCodeModels
Lcom/aide/engine/OpenFile; -> Lcom/aide/engine/OpenFile;
	j6 -> charArray
	DW -> length
Lcom/aide/engine/f0; -> Lcom/aide/engine/UsageSearcherListener;
Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl$d; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl$d;
	j6 -> fileHighlightings
	DW -> mIHighlightingListener
Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeAnalysisEngineServiceImpl;
	fY -> codeAnalysisEngineService
	jw -> engineSolution
	k4(Lcom/aide/engine/EngineSolutionProject;) -> addEngineSolutionProject
	Pm(Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener
	GT(Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	Mk(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	nx(Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener
	SO(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	Ft(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
	t4() -> updateEngineSolution
Lcom/aide/engine/service/CodeAnalysisEngineService$b; -> Lcom/aide/engine/service/CodeAnalysisEngineService$CodeModelsFactory;
	DW() -> getId
	FH(Lcom/aide/codemodel/api/Model;Ljava/util/List;) -> makeCodeModels
Lcom/aide/engine/service/CodeAnalysisEngineService; -> Lcom/aide/engine/service/CodeAnalysisEngineService;
	mb -> navigationListener
	gn(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getCodeCompletionListener
	tp(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getEngine
	DW(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getEngineListener
	Hw(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getGotoSymbolListener
	Zo(Lcom/aide/engine/service/CodeAnalysisEngineService;) -> getNavigationListener
	u7(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener
	FH(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	v5(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener
	VH(Lcom/aide/engine/service/CodeAnalysisEngineService;Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	j6(Ljava/lang/Object;ILandroid/app/Notification;) -> startForeground
Lcom/aide/engine/service/l; -> Lcom/aide/engine/service/CodeModelFactory;
	DW(Lcom/aide/codemodel/api/Model;Ljava/util/List;) -> create
	FH(Ljava/util/List;) -> create
	Hw(Ljava/lang/String;Ljava/util/List;) -> findCodeModel
Lcom/aide/engine/service/ICodeAnalysisEngineService$Sub$Proxy; -> Lcom/aide/engine/service/ICodeAnalysisEngineService$Sub$Proxy;
	k4(Lcom/aide/engine/EngineSolutionProject;) -> addEngineSolutionProject
	Pm(Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener
	GT(Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	Mk(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	nx(Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener
	SO(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	Ft(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
	t4() -> updateEngineSolution
Lcom/aide/engine/service/ICodeAnalysisEngineService$Sub; -> Lcom/aide/engine/service/ICodeAnalysisEngineService$Sub;
	k4(Lcom/aide/engine/EngineSolutionProject;) -> addEngineSolutionProject
	Pm(Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener
	GT(Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	Mk(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	nx(Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener
	SO(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	Ft(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
	t4() -> updateEngineSolution
Lcom/aide/engine/service/ICodeAnalysisEngineService; -> Lcom/aide/engine/service/ICodeAnalysisEngineService;
	k4(Lcom/aide/engine/EngineSolutionProject;) -> addEngineSolutionProject
	Pm(Lcom/aide/engine/service/ICodeCompletionListener;) -> setCodeCompletionListener
	GT(Lcom/aide/engine/service/IEngineListener;) -> setEngineListener
	Mk(Lcom/aide/engine/EngineSolution;) -> setEngineSolution
	nx(Lcom/aide/engine/service/IGotoSymbolListener;) -> setGotoSymbolListener
	SO(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	Ft(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
	t4() -> updateEngineSolution
Lcom/aide/ui/AIDEEditor$t; -> Lcom/aide/ui/AIDEEditor$t;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/LogCatConsole$d; -> Lcom/aide/ui/LogCatConsole$d;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/App$a; -> Lcom/aide/ui/ServiceContainer$a;
Lcom/aide/ui/App$b$a; -> Lcom/aide/ui/ServiceContainer$b$a;
Lcom/aide/ui/App$b; -> Lcom/aide/ui/ServiceContainer$b;
Lcom/aide/ui/App; -> Lcom/aide/ui/ServiceContainer;
	getNativeCodeSupportService() -> getDownloadService
	we() -> getEngineService
	a8() -> getLicenseService
	aM() -> getNavigateService
	BT() -> getTemplateService
	cn() -> getUpdateNotifyService
Lcom/aide/ui/activities/CommitActivity; -> Lcom/aide/ui/activities/CommitActivity;
	kQ(Lcom/aide/engine/FileHighlightings;) -> accept
Lcom/aide/ui/build/BuildServiceCollect; -> Lcom/aide/ui/build/BuildServiceCollect;
	j6 -> androidProjectBuildService
	Zo -> buildServices
	Hw -> htmlCodeBuildService
	DW -> javaProjectBuildService
	v5 -> javaScriptBuildService
	FH -> nativeProjectBuildService
Lcom/aide/ui/build/OutputConsole$i; -> Lcom/aide/ui/build/OutputConsole$i;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/build/javascript/a; -> Lcom/aide/ui/build/javascript/JavaScriptBuildService;
Labcd/bg; -> Lcom/aide/ui/command/KeyStrokeCommand;
	v5() -> getKeyStroke
Labcd/fg; -> Lcom/aide/ui/command/MenuCommand;
	FH() -> getMenuItemId
	DW(Z) -> isVisible
Labcd/dg; -> Lcom/aide/ui/command/MenuItemCommand;
	FH() -> getMenuItemId
Lcom/aide/ui/project/AndroidProjectSupport; -> Lcom/aide/ui/project/AndroidProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	k2(Ljava/lang/String;) -> getProjectMavenDependencyList
	kQ(Ljava/lang/String;Ljava/lang/String;) -> getProjectPackageName
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Lcom/aide/ui/project/JavaProjectSupport; -> Lcom/aide/ui/project/JavaProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Lcom/aide/ui/project/JavaScriptProjectSupport; -> Lcom/aide/ui/project/JavaScriptProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Lcom/aide/ui/project/NativeExecutableProjectSupport; -> Lcom/aide/ui/project/NativeExecutableProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Lcom/aide/ui/project/PhonegapProjectSupport; -> Lcom/aide/ui/project/PhonegapProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Lcom/aide/ui/project/WebsiteProjectSupport; -> Lcom/aide/ui/project/WebsiteProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Lcom/aide/ui/project/internal/GradleTools; -> Lcom/aide/ui/project/internal/GradleTools;
	j3(Ljava/lang/String;) -> getCppSourcePath
	KD(Ljava/lang/String;) -> isAarEexplodedPath
Lcom/aide/ui/scm/DiffView$b; -> Lcom/aide/ui/scm/DiffView$b;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/services/NativeCodeSupportService$g; -> Lcom/aide/ui/services/DownloadService$DocsRunnable;
Lcom/aide/ui/services/NativeCodeSupportService$q; -> Lcom/aide/ui/services/DownloadService$DownloadMavenLibraries;
	j6 -> activity
	DW -> callbackRunnable
	v5 -> downloadService
	FH -> mavenDependencyList
	Hw -> remoteRepositoryList
Lcom/aide/ui/services/NativeCodeSupportService$q$a; -> Lcom/aide/ui/services/DownloadService$MavenLibrariesCallable$Callback;
Lcom/aide/ui/services/NativeCodeSupportService$k; -> Lcom/aide/ui/services/DownloadService$MavenLibrariesRunnable;
	WB -> activity
	fY -> callbackRunnable
	qp -> downloadService
	mb -> mavenDependencyList
	jw -> remoteRepositoryList
Lcom/aide/ui/services/NativeCodeSupportService$s$a; -> Lcom/aide/ui/services/DownloadService$Task$a;
Lcom/aide/ui/services/NativeCodeSupportService$s$b; -> Lcom/aide/ui/services/DownloadService$Task$b;
Lcom/aide/ui/services/NativeCodeSupportService$s$c; -> Lcom/aide/ui/services/DownloadService$Task$c;
Lcom/aide/ui/services/NativeCodeSupportService$s$d; -> Lcom/aide/ui/services/DownloadService$Task$d;
Lcom/aide/ui/services/NativeCodeSupportService$s; -> Lcom/aide/ui/services/DownloadService$Task;
Lcom/aide/ui/services/NativeCodeSupportService$a; -> Lcom/aide/ui/services/DownloadService$a;
Lcom/aide/ui/services/NativeCodeSupportService$b; -> Lcom/aide/ui/services/DownloadService$b;
Lcom/aide/ui/services/NativeCodeSupportService$c; -> Lcom/aide/ui/services/DownloadService$c;
Lcom/aide/ui/services/NativeCodeSupportService$d; -> Lcom/aide/ui/services/DownloadService$d;
Lcom/aide/ui/services/NativeCodeSupportService$e; -> Lcom/aide/ui/services/DownloadService$e;
Lcom/aide/ui/services/NativeCodeSupportService$f; -> Lcom/aide/ui/services/DownloadService$f;
Lcom/aide/ui/services/NativeCodeSupportService$h; -> Lcom/aide/ui/services/DownloadService$h;
Lcom/aide/ui/services/NativeCodeSupportService$i; -> Lcom/aide/ui/services/DownloadService$i;
Lcom/aide/ui/services/NativeCodeSupportService$j; -> Lcom/aide/ui/services/DownloadService$j;
Lcom/aide/ui/services/NativeCodeSupportService$l; -> Lcom/aide/ui/services/DownloadService$l;
Lcom/aide/ui/services/NativeCodeSupportService$m; -> Lcom/aide/ui/services/DownloadService$m;
Lcom/aide/ui/services/NativeCodeSupportService$n; -> Lcom/aide/ui/services/DownloadService$n;
Lcom/aide/ui/services/NativeCodeSupportService$o; -> Lcom/aide/ui/services/DownloadService$o;
Lcom/aide/ui/services/NativeCodeSupportService$p$a; -> Lcom/aide/ui/services/DownloadService$p$a;
Lcom/aide/ui/services/NativeCodeSupportService$p; -> Lcom/aide/ui/services/DownloadService$p;
Lcom/aide/ui/services/NativeCodeSupportService$r$a$a; -> Lcom/aide/ui/services/DownloadService$r$a$a;
Lcom/aide/ui/services/NativeCodeSupportService$r$a; -> Lcom/aide/ui/services/DownloadService$r$a;
Lcom/aide/ui/services/NativeCodeSupportService$r; -> Lcom/aide/ui/services/DownloadService$r;
Lcom/aide/ui/services/NativeCodeSupportService$t; -> Lcom/aide/ui/services/DownloadService$t;
Lcom/aide/ui/services/NativeCodeSupportService; -> Lcom/aide/ui/services/DownloadService;
	DW -> executorService
	FH -> task
	Zo -> taskTitle
	vJ(Landroid/app/Activity;) -> downloadDocs
	gn(Lcom/aide/ui/services/NativeCodeSupportService;Ljava/lang/String;Ljava/lang/String;Z) -> downloadFile
	J8(Lcom/aide/ui/services/NativeCodeSupportService;) -> getExecutorService
	tp(Lcom/aide/ui/services/NativeCodeSupportService;) -> getTask
	gW() -> getTaskTitle
	KD(Landroid/app/Activity;Ljava/lang/String;Ljava/lang/Runnable;) -> runTask
	we(Lcom/aide/ui/services/NativeCodeSupportService;Lcom/aide/ui/services/NativeCodeSupportService$s;) -> setTask
	J0(Lcom/aide/ui/services/NativeCodeSupportService;Ljava/lang/String;) -> setTaskTitle
Lcom/aide/ui/services/EngineService$a; -> Lcom/aide/ui/services/EngineService$EngineServiceConnection;
	WB -> engineService
Lcom/aide/ui/services/EngineService; -> Lcom/aide/ui/services/EngineService;
	j6 -> mCodeAnalysisEngineService
	Hw -> mServiceConnection
	u7() -> bindCodeAnalysisEngineService
	Qq(Lcom/aide/engine/service/INavigationListener;) -> setNavigationListener
	aj(Lcom/aide/engine/service/IUsageSearcherListener;) -> setUsageSearcherListener
Labcd/af$a; -> Lcom/aide/ui/services/LicenseService$a;
Labcd/af$b; -> Lcom/aide/ui/services/LicenseService$b;
Labcd/af; -> Lcom/aide/ui/services/LicenseService;
Lcom/aide/ui/services/MavenService; -> Lcom/aide/ui/services/MavenService;
	BT(Ljava/util/Map;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> existsLocalMavenCache
	XL(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;Ljava/lang/String;Ljava/lang/String;) -> getArtifactPath
	aM(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;Ljava/lang/String;Ljava/lang/String;) -> getArtifactUrl
	DW() -> getDefaulDownloadRepositoriePath
	j6(Lcom/aide/ui/services/MavenService;) -> getDepPathMapping
	lg(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> getMetadataPath
	rN(Lcom/aide/ui/util/BuildGradle$RemoteRepository;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> getMetadataUrl
	er(Ljava/util/Map;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> getNotExistsLocalCache
	nw() -> refresh
	ei() -> resetDepMap
	FH() -> resetDepPathMap
	J8(Ljava/util/Map;Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> resolveFullDependencyTree
	v5(Lcom/aide/ui/util/BuildGradle$MavenDependency;) -> resolvingMavenDependency
Lcom/aide/ui/services/OpenFileService$e; -> Lcom/aide/ui/services/OpenFileService$FileHighlightingsCallback;
	kQ(Lcom/aide/engine/FileHighlightings;) -> accept
Lcom/aide/ui/services/OpenFileService; -> Lcom/aide/ui/services/OpenFileService;
	v5 -> fileHighlightingsCallbacks
	Hw -> lastOpenFile
	DW -> loadedTimeMap
	j6 -> openFileModelMap
	FH -> openFileSupport
	VH(Ljava/lang/String;) -> getLoadedTime
	tp() -> getVisibleOpenFileModel
	gW(Ljava/lang/String;) -> openFile
Lcom/aide/ui/services/ProjectService; -> Lcom/aide/ui/services/ProjectService;
	j6 -> currentAppHome
	FH -> libraryMapping
	DW -> pojectSupport
	Eq(Z) -> buildProject
	BT() -> getLibraryMapping
	Qq() -> init
	I() -> isOpenProject
	ca() -> isPremium
	cb(Ljava/lang/String;) -> openProject
	CU() -> reloadingProject
	aq(Ljava/lang/String;) -> switchBuildVariant
Lcom/aide/ui/services/ProjectSupport; -> Lcom/aide/ui/services/ProjectSupport;
	DW(Z) -> buildProject
	KD(Ljava/lang/String;) -> getOpenProjectNameStringId
	QX() -> getProjectAttributeHtmlString
	EQ() -> isPremium
	er(Ljava/lang/String;) -> isSupport
	Ws() -> makeEngineSolution
Labcd/l4; -> Lcom/aide/ui/tools/ThreadFactory;
	DW -> threadFactory
	DW() -> getSingleton
	j6(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J) -> makeThread
Lcom/aide/ui/views/CodeEditText$CodeEditTextHighlightingModel; -> Lcom/aide/ui/views/CodeEditText$CodeEditTextHighlightingModel;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/views/CodeEditText$CodeEditTextModel; -> Lcom/aide/ui/views/CodeEditText$CodeEditTextModel;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/views/CodeEditText$EditorView$c; -> Lcom/aide/ui/views/CodeEditText$EditorView$c;
	v5() -> getKeyStroke
Lcom/aide/ui/views/CodeEditText$EditorView; -> Lcom/aide/ui/views/CodeEditText$EditorView;
	ei(Lcom/aide/ui/views/editor/CaretMoveListener;) -> addCaretMoveListener
	nw(Lcom/aide/ui/views/editor/SelectionListener;) -> addSelectionListener
	vJ() -> copySelectedText
	jw() -> getInsertTabsAsSpaces
	kf() -> getSelectionVisibility
	fY() -> hasFocusWrapper
	Sf() -> initColors
	Z1() -> isHidden
Lcom/aide/ui/views/editor/AbstractModel; -> Lcom/aide/ui/views/editor/AbstractModel;
	j6 -> modelListeners
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	aq(IIIIZ) -> getSelectedRegionReader
	ca(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/views/editor/Caret; -> Lcom/aide/ui/views/editor/Caret;
	Hw -> caretBlinks
	j6 -> caretTimer
	DW -> mOConsole
	v5() -> cancel
	gn() -> createTimer
	u7(Z) -> setCaretBlinks
	Zo(Lcom/aide/ui/views/editor/OConsole;) -> setOConsole
Lcom/aide/ui/views/editor/Color; -> Lcom/aide/ui/views/editor/Color;
	Hw -> BLACK
	FH -> BLUE
	v5 -> LIGHT_GRAY
	DW -> RED
	VH -> TRANSPARENT
	Zo -> WHITE
	j6 -> color
Lcom/aide/ui/views/editor/EditorModel; -> Lcom/aide/ui/views/editor/EditorModel;
	tp -> undoStack
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	et() -> getEntireDocument
	hz(Z) -> getEntireDocument
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	aq(IIIIZ) -> getSelectedRegionReader
	CU(IIIIZLjava/lang/String;) -> getSelectedRegionReader
	FN(Labcd/mg;) -> getSelectedRegionReader
	Xa(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	jO(Labcd/mg;Z) -> getSelectedRegionReader
	Eq(Labcd/mg;ZLjava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/views/editor/Font; -> Lcom/aide/ui/views/editor/Font;
	j6 -> textSize
Lcom/aide/ui/views/editor/Graphics; -> Lcom/aide/ui/views/editor/Graphics;
	v5 -> btmapPaint
	j6 -> canvas
	DW -> textPaint
	QX(Lcom/aide/ui/views/editor/w;) -> clipRect
	FH(Landroid/graphics/Bitmap;FFF) -> drawBitmap
	u7(FFFF) -> drawRect
	VH(Ljava/lang/String;FF) -> drawText
	j6([CIIFF) -> drawText
	EQ() -> getClipBounds
	J0([CII[F) -> getTextWidths
	J8() -> restoreCanvas
	XL(Lcom/aide/ui/views/editor/Color;) -> setColor
	aM(Lcom/aide/ui/views/editor/Font;) -> setFont
Lcom/aide/ui/views/editor/Model; -> Lcom/aide/ui/views/editor/Model;
	j3(Lcom/aide/ui/views/editor/ModelListener;) -> addModelListener
	yS(II) -> charAtColumnLine
	SI(I) -> getColumnCount
	ei() -> getLineCount
	vJ() -> getMaxColumnCount
	lg() -> getSelectedRegion
	ca(IIIIZ) -> getSelectedRegionReader
	VH(Labcd/mg;Ljava/lang/String;) -> getSelectedRegionReader
	J8(I[C) -> readLineText
	vy(Lcom/aide/ui/views/editor/ModelListener;) -> removeModelListener
Lcom/aide/ui/views/editor/OConsole; -> Lcom/aide/ui/views/editor/OConsole;
	b1 -> TRANSPARENT
	eU -> caret
	Jl -> caretColumn
	iW -> caretLine
	kf -> caretVisibility
	T6 -> collapsableIcon
	cc -> collapsedIcon
	GK -> consoleMaxWidth
	fh -> curReadColumnCount
	iK -> curReadLineCount
	sv -> curReadTextChars
	DY -> defaultTypeface
	jw -> deviceFontSize
	Lz -> errorColor
	ct -> expressionDisplayColor
	TI -> expressionSteppingPointColor
	e9 -> firstSelectedColumn
	sM -> firstSelectedLine
	mb -> fontFamily
	zh -> fontHeight
	AE -> graphicsColor
	k1 -> hidden
	oa -> hyperlinkColor
	om -> indexingLayoutTask
	n5 -> insertTabsAsSpaces
	Od -> invalidateLayoutTask
	QO -> lastSelectedColumn
	a5 -> lastSelectedLine
	WB -> model
	oh -> overriddenMethodIcon
	Ej -> overridingMethodIcon
	wE -> overwriteMode
	Of -> selectedRegionTextColor
	IS -> selectionAnchorColumn
	gG -> selectionAnchorLine
	qP -> selectionColor
	hp -> selectionListenerVector
	Nh -> selectionPointColumn
	BR -> selectionPointLine
	aX -> selectionVisibility
	ce -> separatorColor
	Fd -> setWarningColor
	AR -> softMaxWidthLineColor
	E4 -> softMaxWidthRealColumn
	AL -> spaceCharWidth
	MP -> stepbarColor
	Z1 -> tabSize
	pl -> testCaseFailedIcon
	GT -> testCaseFailedPreviouslyIcon
	Hl -> testCasePassedIcon
	Yi -> testCasePassedPreviouslyIcon
	Q6 -> textStyleArray
	sT -> todoColor
	PT -> traceColor
	ei(Lcom/aide/ui/views/editor/CaretMoveListener;) -> addCaretMoveListener
	nw(Lcom/aide/ui/views/editor/SelectionListener;) -> addSelectionListener
	vJ() -> copySelectedText
	jJ(II) -> getColumnWithTabs
	jw() -> getInsertTabsAsSpaces
	kf() -> getSelectionVisibility
	Eq(II) -> getTextColorKind
	fY() -> hasFocusWrapper
	mb() -> init
	Sf() -> initColors
	Z1() -> isHidden
	Q6(II) -> isInSelectedRegion
	Mz(I) -> readLineText
Lcom/aide/ui/views/editor/OEditor; -> Lcom/aide/ui/views/editor/OEditor;
	ei(Lcom/aide/ui/views/editor/CaretMoveListener;) -> addCaretMoveListener
	nw(Lcom/aide/ui/views/editor/SelectionListener;) -> addSelectionListener
	vJ() -> copySelectedText
	jw() -> getInsertTabsAsSpaces
	ti(I) -> getLineIndentationCount
	kf() -> getSelectionVisibility
	fY() -> hasFocusWrapper
	Sf() -> initColors
	Z1() -> isHidden
Labcd/kg; -> Lcom/aide/ui/views/editor/Position;
	DW -> column
	j6 -> line
	j6() -> getColumn
	DW() -> getLine
Labcd/mg; -> Lcom/aide/ui/views/editor/SelectedRegion;
	fY -> endColumn
	jw -> endLine
	mb -> startColumn
	WB -> startLine
	DW() -> getEndColumn
	FH() -> getEndLine
	Hw() -> getStartColumn
	v5() -> getStartLine
Lcom/aide/ui/views/editor/y; -> Lcom/aide/ui/views/editor/SelectedRegionReader2;
	fY -> endColumn
	qp -> endLine
	zh -> indent
	w9 -> lineSeparatorCharArray
	AL -> lineSeparatorIndex
	WB -> model
	mb -> startColumn
	jw -> startLine
Lcom/aide/ui/views/editor/l; -> Lcom/aide/ui/views/editor/SelectedRegionReader;
	fY -> endColumn
	qp -> endLine
	k2 -> indent
	AL -> lineSeparatorCharArray
	zh -> lineSeparatorIndex
	WB -> model
	mb -> startColumn
	jw -> startLine
